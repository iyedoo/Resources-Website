import{_ as r,c as a,o as s,ah as o}from"./chunks/framework.B49HbWsY.js";const h=JSON.parse('{"title":"Strings & Arrays","description":"","frontmatter":{},"headers":[],"relativePath":"fundamentals/strings-arrays.md","filePath":"fundamentals/strings-arrays.md"}'),t={name:"fundamentals/strings-arrays.md"};function i(n,e,l,c,d,g){return s(),a("div",null,[...e[0]||(e[0]=[o('<h1 id="strings-arrays" tabindex="-1">Strings &amp; Arrays <a class="header-anchor" href="#strings-arrays" aria-label="Permalink to &quot;Strings &amp; Arrays&quot;">​</a></h1><p>Understanding <strong>strings</strong> and <strong>arrays</strong> is essential in programming contests and problem solving.<br> This page gathers tutorials, guided exercises, and problem sets to help you master them.</p><hr><h2 id="📚-learning-resources" tabindex="-1">📚 Learning Resources <a class="header-anchor" href="#📚-learning-resources" aria-label="Permalink to &quot;📚 Learning Resources&quot;">​</a></h2><ul><li><a href="https://www.programiz.com/cpp-programming/strings" target="_blank" rel="noreferrer">C++ Strings (Programiz)</a></li><li><a href="https://www.programiz.com/cpp-programming/arrays" target="_blank" rel="noreferrer">C++ Arrays (Programiz)</a></li><li><a href="https://www.programiz.com/cpp-programming/vectors" target="_blank" rel="noreferrer">C++ Vectors (Programiz)</a></li><li><a href="https://www.france-ioi.org/algo/chapters.php" target="_blank" rel="noreferrer">France-IOI — Algorithmic Training</a></li></ul><hr><h2 id="📝-problem-sets" tabindex="-1">📝 Problem Sets <a class="header-anchor" href="#📝-problem-sets" aria-label="Permalink to &quot;📝 Problem Sets&quot;">​</a></h2><blockquote><p>These problem sets are from <strong>Assiut University Training (Codeforces Group)</strong>.</p></blockquote><ul><li><a href="https://codeforces.com/group/MWSDmqGsZm/contest/219774" target="_blank" rel="noreferrer">Arrays — Sheet #3</a></li><li><a href="https://codeforces.com/group/MWSDmqGsZm/contest/219856" target="_blank" rel="noreferrer">Strings — Sheet #4</a></li></ul><hr><h2 id="💡-tips" tabindex="-1">💡 Tips <a class="header-anchor" href="#💡-tips" aria-label="Permalink to &quot;💡 Tips&quot;">​</a></h2><ul><li>Prefer <code>std::string</code>, <code>std::vector</code>, over arrays unless required.</li><li>Always check bounds when working with arrays or strings.</li><li>Debug with small test cases before tackling larger inputs.</li><li>Use <code>getline()</code> when you need to read full lines with spaces instead of plain <code>cin</code>.</li><li>Learn key <code>std::string</code> methods: <code>.size()</code>, <code>.substr()</code>, <code>.find()</code>, <code>.push_back()</code>.</li><li>Familiarize yourself with useful STL algorithms: <code>sort</code>, <code>reverse</code>, <code>min_element</code>, <code>max_element</code>, <code>accumulate</code>.</li><li>Remember: arrays have fixed size, but <code>vector</code> grows dynamically—use accordingly.</li><li>Practice different loop styles: range-based loops and indexed loops each have their use cases.</li><li>For performance, pass large strings or vectors by <strong><code>const &amp;</code></strong> reference, not by value.</li></ul><hr>',13)])])}const p=r(t,[["render",i]]);export{h as __pageData,p as default};
