import{_ as r,c as a,o as t,ah as o}from"./chunks/framework.B49HbWsY.js";const b=JSON.parse('{"title":"Debugging Practices","description":"","frontmatter":{},"headers":[],"relativePath":"fundamentals/debugging.md","filePath":"fundamentals/debugging.md"}'),i={name:"fundamentals/debugging.md"};function s(n,e,l,g,u,c){return t(),a("div",null,[...e[0]||(e[0]=[o('<h1 id="debugging-practices" tabindex="-1">Debugging Practices <a class="header-anchor" href="#debugging-practices" aria-label="Permalink to &quot;Debugging Practices&quot;">​</a></h1><p>Debugging is a core skill in competitive programming. Writing a correct algorithm is only half the work — you also need to make sure your code actually runs as expected, and be able to correct it if a mistake is found.</p><hr><h2 id="🔑-key-advices" tabindex="-1">🔑 Key Advices <a class="header-anchor" href="#🔑-key-advices" aria-label="Permalink to &quot;🔑 Key Advices&quot;">​</a></h2><ul><li>Always <strong>try the problem on paper first</strong> before coding.</li><li>Have a <strong>clear idea of your algorithm and used data structures</strong>. If possible, write an outline on paper before implementing (avoid blind coding).</li><li>Test on <strong>small and extremal cases</strong> that you can check manually.</li><li>Be careful with <strong>fast I/O</strong> and watch out for <strong>integer overflow</strong>.</li><li>Use <strong><code>cerr</code> instead of <code>cout</code></strong> for debugging (since graders usually ignore <code>cerr</code>).</li><li>A <strong>debugger</strong> is often more powerful than console output.</li><li>Learn to use <strong><code>assert</code></strong> to verify assumptions in your code.</li><li>Compare your solution with a <strong>bruteforce solution</strong> on small cases to locate discrepancies.</li><li><strong>Train your debugging skills</strong>: don’t immediately read the editorial just because your mistake seems “dumb” — solving it yourself is part of the training.</li></ul><hr><h2 id="📚-useful-resources" tabindex="-1">📚 Useful Resources <a class="header-anchor" href="#📚-useful-resources" aria-label="Permalink to &quot;📚 Useful Resources&quot;">​</a></h2><ul><li><a href="https://usaco.guide/general/debugging-checklist" target="_blank" rel="noreferrer">USACO Guide – How to Debug</a></li><li><a href="https://usaco.guide/general/basic-debugging?lang=cpp" target="_blank" rel="noreferrer">USACO Guide – Basic Debugging</a></li><li><a href="https://usaco.guide/general/debugging-cpp?lang=cpp" target="_blank" rel="noreferrer">USACO Guide – Debugging C++</a></li><li><a href="https://code.visualstudio.com/docs/cpp/cpp-debug" target="_blank" rel="noreferrer">Debug C++ in Visual Studio Code</a></li><li>🎥 <a href="https://www.youtube.com/watch?v=ZvOjVD433Gc" target="_blank" rel="noreferrer">VS Code Debugging a Simple C++ Program (YouTube)</a></li><li>🎥 <a href="https://www.youtube.com/watch?v=2VokW_Jt0oM" target="_blank" rel="noreferrer">Debugging C++ Program in Visual Studio Code (YouTube)</a></li><li>🎥 <a href="https://www.youtube.com/watch?v=ean872pAyzY" target="_blank" rel="noreferrer">Debugging C/C++ with Visual Studio Code Explained in Less Than 6 Minutes! (YouTube)</a></li></ul><hr><p>⚡ <em>Debugging is not wasted time — it’s part of solving the problem.</em></p><hr>',11)])])}const h=r(i,[["render",s]]);export{b as __pageData,h as default};
