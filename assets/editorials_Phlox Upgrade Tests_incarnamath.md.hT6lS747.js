import{_ as i,c as s,o as t,ah as e}from"./chunks/framework.B49HbWsY.js";const c=JSON.parse('{"title":"IncarnaMath","description":"","frontmatter":{},"headers":[],"relativePath":"editorials/Phlox Upgrade Tests/incarnamath.md","filePath":"editorials/Phlox Upgrade Tests/incarnamath.md"}'),n={name:"editorials/Phlox Upgrade Tests/incarnamath.md"};function h(l,a,p,r,o,k){return t(),s("div",null,[...a[0]||(a[0]=[e(`<h1 id="incarnamath" tabindex="-1">IncarnaMath <a class="header-anchor" href="#incarnamath" aria-label="Permalink to &quot;IncarnaMath&quot;">​</a></h1><p><em>Written by Iyed Baassou</em></p><h2 id="problem-statement" tabindex="-1">Problem Statement <a class="header-anchor" href="#problem-statement" aria-label="Permalink to &quot;Problem Statement&quot;">​</a></h2><blockquote><p><a href="statements/task2-eng.pdf">English</a><br><a href="statements/task2-ara.pdf">Arabic</a><br><a href="statements/task2-fre.pdf">French</a></p></blockquote><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><p>We simply print the product of <code>i</code> (the number of the student) and the latest number written on the chalkboard which is 27 at the very start.</p><p>To keep our approach correct, we update the latest number to that product.</p><p>This will repeat until the last student’s number is written.</p><p>We can do that using a for loop with variable <code>i</code> in the range <code>[1, n]</code> and we multiply <code>last</code> by <code>i</code>, given <code>last = 27</code> initially.</p><h2 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h2><p>For sake of simplicity, we will be implementing the solution in Python.</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">last </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 27</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Range [1, n + 1)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(last </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    last </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span></span></code></pre></div>`,12)])])}const m=i(n,[["render",h]]);export{c as __pageData,m as default};
